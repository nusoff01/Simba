html {
    background-color: white;
    font: helvetica;
}

.submit-button {
    margin: 0 auto;
    font-size: 24px;
    text-align:center;
    background-color: yellow;
}

table, th, td {
    border: 1px solid black;
    margin-left:auto; 
    margin-right:auto;
    text-align:center;
}

h2, h4, h5 {
    margin: 5px;
}

#header-table {
    border: none;
    width:100%;
    text-align:center;
}
#header-table.tr, #header-table.td {
    border:none;
}

.mainframe-table .mainframe-table tr, .mainframe-table td {
    border: none;
}   

.mainframe-table {
    width: 100%;
    table-layout: fixed;
}


ul[dnd-list], ul[dnd-list] > li { 
    position: relative;
}


/*FROM DRAGGABLE ANGULAR DEMO*/

/**
 * For the correct positioning of the placeholder element, the dnd-list and
 * it's children must have position: relative
 */
.typesDemo ul[dnd-list],
.typesDemo ul[dnd-list] > li {
    position: relative;
}

/**
 * The dnd-list should always have a min-height,
 * otherwise you can't drop to it once it's empty
 */
.typesDemo ul[dnd-list] {
    min-height: 42px;
    padding-left: 0px;
}

/**
 * The dndDraggingSource class will be applied to
 * the source element of a drag operation. It makes
 * sense to hide it to give the user the feeling
 * that he's actually moving it.
 */
.typesDemo ul[dnd-list] .dndDraggingSource {
    display: none;
}

/**
 * An element with .dndPlaceholder class will be
 * added to the dnd-list while the user is dragging
 * over it.
 */
.typesDemo ul[dnd-list] .dndPlaceholder {
    display: block;
    background-color: #ddd;
    min-height: 42px;
}

/**
 * The dnd-lists's child elements currently MUST have
 * position: relative. Otherwise we can not determine
 * whether the mouse pointer is in the upper or lower
 * half of the element we are dragging over. In other
 * browsers we can use event.offsetY for this.
 */
.typesDemo ul[dnd-list] li {
    background-color: #fff;
    border: 1px solid #ddd;
    border-top-right-radius: 4px;
    border-top-left-radius: 4px;
    display: block;
    padding: 10px 15px;
    margin-bottom: -1px;
    
    /* Disable text selection if item is not draggable */
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/**
 * Gender-specifc background
 */
.typesDemo ul[dnd-list] li.background-man {
    background-color: #CAE0FC;
}

.typesDemo ul[dnd-list] li.background-woman {
    background-color: #FFE2F5;
}

.typesDemo ul[dnd-list] input.background-man {
    background-color: #D8E9FF;
    color: #2F4D99;
}

.typesDemo ul[dnd-list] input.background-woman {
    background-color: #FFF0FA;
    color: #D84FA7;
}

/**
 * Handle positioning
 */
.typesDemo .handle {
    cursor: move;
    position: absolute;
    top: 14px;
}

.typesDemo .name {
    margin-left: 20px;
}














/*SIMPLE DEMO*/




/**
 * For the correct positioning of the placeholder element, the dnd-list and
 * it's children must have position: relative
 */
.simpleDemo ul[dnd-list],
.simpleDemo ul[dnd-list] > li {
    position: relative;
}

/**
 * The dnd-list should always have a min-height,
 * otherwise you can't drop to it once it's empty
 */
.simpleDemo ul[dnd-list] {
    min-height: 42px;
    padding-left: 0px;
}

/**
 * The dndDraggingSource class will be applied to
 * the source element of a drag operation. It makes
 * sense to hide it to give the user the feeling
 * that he's actually moving it.
 */
.simpleDemo ul[dnd-list] .dndDraggingSource {
    display: none;
}

/**
 * An element with .dndPlaceholder class will be
 * added to the dnd-list while the user is dragging
 * over it.
 */
.simpleDemo ul[dnd-list] .dndPlaceholder {
    display: block;
    background-color: #ddd;
    min-height: 42px;
}

/**
 * The dnd-lists's child elements currently MUST have
 * position: relative. Otherwise we can not determine
 * whether the mouse pointer is in the upper or lower
 * half of the element we are dragging over. In other
 * browsers we can use event.offsetY for this.
 */
.simpleDemo ul[dnd-list] li {
    background-color: #fff;
    border: 1px solid #ddd;
    border-top-right-radius: 4px;
    border-top-left-radius: 4px;
    display: block;
    padding: 10px 15px;
    margin-bottom: -1px;
}

/**
 * Show selected elements in green
 */
.simpleDemo ul[dnd-list] li.selected {
    background-color: #dff0d8;
    color: #3c763d;
}






/*SORTABLE DEMO*/

.list {
    list-style: none outside none;
    margin: 10px 0 30px;
}

.apps-container {
  border: 2px dashed blue;
  margin: 10px 10px 0 0;
  padding: 5px;
  min-width:200px;
  min-height:50px;
}

.apps-pos-container {
  
  min-width:140px;
  min-height:40px;
}

.app {
    width: 170px;
    padding: 5px 10px;
    margin: 5px 0;
    border: 2px solid #444;
    border-radius: 5px;

    font-size: 1.1em;
    font-weight: bold;
    text-align: center;
    cursor: move;
}

.app-home {
    background-color: lightblue;
}

.app-away {
    background-color: pink;
}

.app-pos {
    width: 120px;
    padding: 5px 10px;
    margin: 5px 0;
    border: 2px solid #444;
    border-radius: 5px;
    background-color: white;

    font-size: 1.1em;
    font-weight: bold;
    text-align: center;
    cursor: move;
}




.apps-container {
  border: 2px dashed blue;
  margin: 10px 10px 0 0;
  padding: 5px;
}


/***  Extra ***/

body {
    font-family: Verdana, 'Trebuchet ms', Tahoma;
}

.logList {
    margin-top: 20px;
    width: 250px;
    min-height: 300px;
    padding: 5px 15px;
    border: 5px solid #000;
    border-radius: 15px;
}

.logItem {
  margin-bottom: 10px;
}

.logList:before {
    content: 'log';
    padding: 0 5px;
    position: relative;
    top: -1.1em;
    background-color: #FFF;
}

.container {
    /*width: 750px;*/
    margin: auto;
}

h1, h2 {
    text-align: center;
}

.floatleft {
  float: left;
}

.floatright {
  float: right;
}

.clear {
  clear: both;
}

.container.wide {
    width: 620px;
}







#field-table {
    width:700px;
    height:700px;
    text-align:center;
    border:none;
    table-layout:fixed;

}
#field-table td h3{
    background-color: red;
}

.base {
    width = 150px;
    height = 150px;
    margin: 0 auto;
    margin-top: 25px;
    margin-bottom: 25px;
    background-color: lightgreen;
    font-size: 24px;
    border-radius: 25px 
}
.pitcher {
    width = 150px;
    height = 150px;
    margin: 0 auto;
    margin-top: 25px;
    margin-bottom: 25px;
    background-color: lightblue;
    font-size: 24px;
    border-radius: 25px 
}


